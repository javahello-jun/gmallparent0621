<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namespace:接口全路径-->
<mapper namespace="com.atguigu.gmall.product.mapper.BaseAttrInfoMapper">
    <!--标识返回的结果集
        id:表示唯一标识
        type:返回结果的类型
        autoMaping:表示自动映射，数据库有的字段与实体类自动映射
    -->
    <resultMap id="baseAttrInfoMapper" type="com.atguigu.gmall.model.product.BaseAttrInfo" autoMapping="true">
        <!--
            id:标识主键
            property:表示实体类的属性名称
            column:表示sql语句执行之后的列名
        -->
        <id property="id" column="id"></id>

        <!--
            表示普通的字段
        -->
<!--        <result property="" column=""></result>-->
<!--        <result property="" column=""></result>-->
<!--        <result property="" column=""></result>-->
    <!--mybatis如何配置1：n
    property:表示实体类的属性名称
    ofType：表示多的那面返回的数据类型
    -->
    <collection property="attrValueList" ofType="com.atguigu.gmall.model.product.BaseAttrValue" autoMapping="true">
        <!--此时id发生了重名，起个别名-->
        <id property="id" column="attr_value_id"></id>
    </collection>
    </resultMap>
    <!--执行方法
     id:表示方法名称
     resultMap:返回结果集
        -->
    <select id="selectBaseAttrInfoList" resultMap="baseAttrInfoMapper">
        select
       bai.id,
       bai.attr_name,
       bai.category_id,
       bai.category_level,
       bav.id attr_value_id,
       bav.value_name,
       bav.attr_id
    from base_attr_info bai inner join base_attr_value bav
    on bai.id = bav.attr_id
    <where>
        <if test="category1Id != null and category1Id != 0">
            or (bai.category_id = #{category1Id} and bai.category_level=1)
        </if>
        <if test="category2Id != null and category2Id != 0">
            or (bai.category_id = #{category2Id} and bai.category_level=2)
        </if>
        <if test="category3Id != null and category3Id != 0">
            or (bai.category_id = #{category3Id} and bai.category_level=3)
        </if>
    </where>
     order by bai.category_level,bai.id
    </select>
</mapper>